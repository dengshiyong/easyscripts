#!/usr/bin/env python
# -*- coding:utf-8 -*-
# shaozx@gmail.com 2009-05-09
#
# 用拼音补全命令行中的中文名称和路径
#
# 实验目录如下：
# biff@lenovo:/domain/WorkSpace$ ls
# SVN培训  全球眼  浙江建行  浙江农信
#
# 使用: (输完后按 TAB 键自动补全)
#    cd S     <tab>             进入[SVN培训]
#    cd q     <tab>             进入[全球眼]
#    cd z     <tab>             自动补全[浙江]
#    cd zj    <tab><tab>        提示[浙江建行 浙江农信]备选
#    cd 浙江j <tab>             进入[浙江建行]
#    cd zjj   <tab>             进入[浙江建行]
#    cd zj1   <tab>             进入[浙江建行]
#    cd zj2   <tab>             进入[浙江农信]
#
#   2009-05-08修订  取不到拼音的汉字匹配任何字符
#   2009-05-07新增  名称中有中文全角,可以用英文符号补全
#   2009-05-06修订  解决数字序号定位时借位的问题
#
# 配置: 
#    直接执行 sh install.sh 进行安装;
#
# 问题：
#  1、多音字未解决,比如[浙江建行]要输入[zjjx];
#  2、大字符集输入使用变通的方法(取不到拼音的汉字匹配任何字符)
#
# 蔡国权/ 蔡依林/ 陈百强/ 陈楚生/ 陈慧琳/ 陈坤/   陈淑桦/ 成龙/
# 蔡琴/   草蜢/   陈柏宇/ 陈海铃/ 陈慧娴/ 陈倩倩/ 陈小春/
#  如上,因为"蜢"和"倩"都是"?",[草蜢]无法用[cm]进入,只能用[c4]进入
#  如果输入[cm<tab>],会提示[草蜢]和[陈倩倩],这时用[cm1]进入
#  如果输入[cq<tab>],会提示[蔡琴][草蜢]和[陈倩倩]，同样用数字选择
#
#
# 祝Linux之行一路顺风!
# 有问题邮件联系!
#

import os,sys
import locale

def getPYSTR(s):
    s=unicode(s,"utf8")
    ret = ""
    for i in range(len(s)):
        ret += getPY(getSym(s[i]))
    return ret

def getSym(s):
    if s==unicode("～","UTF8"): return unicode("~","UTF8")
    if s==unicode("！","UTF8"): return unicode("!","UTF8")
    if s==unicode("＠","UTF8"): return unicode("@","UTF8")
    if s==unicode("＃","UTF8"): return unicode("#","UTF8")
    if s==unicode("＄","UTF8"): return unicode("$","UTF8")
    if s==unicode("％","UTF8"): return unicode("%","UTF8")
    if s==unicode("＆","UTF8"): return unicode("&","UTF8")
    if s==unicode("＊","UTF8"): return unicode("*","UTF8")
    if s==unicode("（","UTF8"): return unicode("(","UTF8")
    if s==unicode("）","UTF8"): return unicode(")","UTF8")
    if s==unicode("＿","UTF8"): return unicode("_","UTF8")
    if s==unicode("－","UTF8"): return unicode("-","UTF8")
    if s==unicode("＋","UTF8"): return unicode("+","UTF8")
    if s==unicode("［","UTF8"): return unicode("[","UTF8")
    if s==unicode("］","UTF8"): return unicode("]","UTF8")
    if s==unicode("＜","UTF8"): return unicode("<","UTF8")
    if s==unicode("＞","UTF8"): return unicode(">","UTF8")
    if s==unicode("？","UTF8"): return unicode("?","UTF8")
    if s==unicode("，","UTF8"): return unicode(",","UTF8")
    if s==unicode("。","UTF8"): return unicode(".","UTF8")
    if s==unicode("／","UTF8"): return unicode("/","UTF8")
    if s==unicode("、","UTF8"): return unicode(",","UTF8")
    return s

def getPY(s):
    try: s=s.encode("GB18030")
    except: pass
    if s<"\xb0\xa1": return s
    if s>"\xd7\xf9": return "?"
    if s<"\xb0\xc5": return "a"
    if s<"\xb2\xc1": return "b"
    if s<"\xb4\xee": return "c"
    if s<"\xb6\xea": return "d"
    if s<"\xb7\xa2": return "e"
    if s<"\xb8\xc1": return "f"
    if s<"\xb9\xfe": return "g"
    if s<"\xbb\xf7": return "h"
    if s<"\xbf\xa6": return "j"
    if s<"\xc0\xac": return "k"
    if s<"\xc2\xe8": return "l"
    if s<"\xc4\xc3": return "m"
    if s<"\xc5\xb6": return "n"
    if s<"\xc5\xbe": return "o"
    if s<"\xc6\xda": return "p"
    if s<"\xc8\xbb": return "q"
    if s<"\xc8\xf6": return "r"
    if s<"\xcb\xfa": return "s"
    if s<"\xcd\xda": return "t"
    if s<"\xce\xf4": return "w"
    if s<"\xd1\xb9": return "x"
    if s<"\xd4\xd1": return "y"
    if s<"\xd7\xfa": return "z"

if __name__== '__main__':
    if len(sys.argv) != 3 :
        sys.exit(1)

    dironly = sys.argv[1]
    cur = sys.argv[2]
    cur = cur.replace("\\","")

    idx=None; _cur=cur
    if len(cur)>1 and cur[-1:] >='0' and cur[-1:]<='9':
        idx = int(cur[-1])
        _cur = cur[:-1]

    _name=os.path.basename(_cur)

    name=os.path.basename(cur)
    dir=os.path.dirname(cur)
    if len(dir)==0 : dir="./"
    
    if not os.path.exists(dir):
        sys.exit(0)

    try:
        list = os.listdir(dir)
    except:
        sys.exit(0)

    if name in list or _name in list :
        sys.exit(0)

    ret = []

    _name_py= getPYSTR(_name).replace("\\","");
    for l in list:
        _file_py= getPYSTR(l).replace("\\","")
        if l == _file_py : continue

        i=0
        while len(_name_py) > i and len(_file_py) > i :
            if _file_py[i] == "?" or _file_py[i] == _name_py[i] :
                i+=1; continue;
            if _name_py[i]!=l[i] : break
        if len(_name_py) == i :
            tmp = (dir+"/"+l).replace(".//","")
            if dironly == "x-d" and not os.path.isdir(tmp): continue
            ret.append( tmp )

    try:
        locale.setlocale(locale.LC_ALL,"")
    except:
        pass

    ret.sort(key=locale.strxfrm)
    if idx and len(ret) > idx-1:
        print ret[idx-1]
    else:
        print "\n".join(ret)

